apiVersion: argoproj.io/v1alpha1
kind: ApplicationSet
metadata:
  name: components
spec:
  syncPolicy:
    preserveResourcesOnDeletion: true
    applicationsSync: create-update
  goTemplate: true
  goTemplateOptions: ["missingkey=error"]
  generators:
    - matrix:
        generators:
          - clusters:
              selector:
                matchLabels:
                  argocd.argoproj.io/secret-type: cluster
          - list:
              elements:
                - component: dex
                - component: openstack
                - component: undersync
                - component: nautobot
                - component: argo
                  kustomize:
                    patches:
                      - target:
                          kind: ConfigMap
                          name: workflow-controller-configmap
                        patch: |-
                          - op: replace
                            path: /data/sso
                            value: |-
                              # This is the root URL of the OIDC provider (required).
                              issuer: https://dex.{{index .metadata.annotations "dns_zone" }}
                              # This defines how long your login is valid for (in hours). (optional)
                              # If omitted, defaults to 10h. Example below is 10 days.
                              sessionExpiry: 240h
                              # This is name of the secret and the key in it that contain OIDC client
                              # ID issued to the application by the provider (required).
                              clientId:
                                name: argo-sso
                                key: client-id
                              # This is name of the secret and the key in it that contain OIDC client
                              # secret issued to the application by the provider (required).
                              clientSecret:
                                name: argo-sso
                                key: client-secret
                              # This is the redirect URL supplied to the provider (optional). It must
                              # be in the form <argo-server-root-url>/oauth2/callback. It must be
                              # browser-accessible. If omitted, will be automatically generated.
                              redirectUrl: https://workflows.{{index .metadata.annotations "dns_zone"}}/oauth2/callback
                              # Additional scopes to request. Typically needed for SSO RBAC. >= v2.12
                              scopes:
                                - groups
                                - email
                                - profile
                              # RBAC Config. >= v2.12
                              rbac:
                                enabled: false
                      - target:
                          kind: Ingress
                          name: argo-workflows
                        patch: |-
                          - op: replace
                            path: /spec/rules/0/host
                            value: workflows.{{index .metadata.annotations "dns_zone" }}
                          - op: replace
                            path: /spec/tls/0/hosts/0
                            value: workflows.{{index .metadata.annotations "dns_zone" }}
                          - op: replace
                            path: '/metadata/annotations/cert-manager.io~1cluster-issuer'
                            value: '{{.name }}-cluster-issuer'

  template:
    metadata:
      name: '{{.name}}-{{.component}}'
    spec:
      project: default
      source:
        repoURL: '{{index .metadata.annotations "uc_repo_git_url"}}'
        targetRevision: '{{index .metadata.annotations "uc_repo_ref"}}'
        path: 'components/{{.component}}'
      destination:
        server: '{{.server}}'
        namespace: '{{.component}}'
      syncPolicy:
        automated:
          selfHeal: true
        syncOptions:
          - CreateNamespace=true
  templatePatch: |
    {{- if hasKey . "kustomize" }}
    spec:
      source:
        kustomize:
          {{- if hasKey .kustomize "patches" }}
          patches:
            {{- range $patch := .kustomize.patches }}
            - target:
                # indentation matters here. need to collapse to a single line to preserve it
                {{ $patch.target | toJson | indent 12 }}
              patch: |-
                {{- range $line := $patch.patch | trim | splitList "\n" }}
                {{ $line | indent 16 }}
                {{- end }}
            {{- end }}
          {{- end }}
    {{- end }}
