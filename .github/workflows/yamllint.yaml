name: Validate Manifests

on:
  push:
  pull_request:
  workflow_dispatch:

jobs:
  lint-yaml:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@692973e3d937129bcbf40652eb9f2f61becf3332 # v4
      - run: pip install yamllint
      - run: yamllint -c .yamllint.yaml --format github .

  kustomize:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@692973e3d937129bcbf40652eb9f2f61becf3332 # v4
      - uses: azure/setup-kubectl@901a10e89ea615cf61f57ac05cecdf23e7de06d8 # v3
      - uses: azure/setup-helm@29960d0f5f19214b88e1d9ba750a9914ab0f1a2f # v4.0.0
      - uses: bmuschko/setup-kubeconform@5ccaecbbf012bcb1eeeab66e649db64a477ade8f # v1
      - name: validate kustomize with kubeconform
        run: |
          set -o errexit
          set -o pipefail
          items=$(find bootstrap -maxdepth 2 -name kustomization.yaml -exec dirname {} \;)
          items+=($(find operators -maxdepth 2 -name kustomization.yaml -exec dirname {} \;))
          items+=($(find components -maxdepth 2 -name kustomization.yaml -exec dirname {} \;))
          items+=($(find apps -maxdepth 2 -name kustomization.yaml -exec dirname {} \;))

          for item in ${items}; do
            echo "${item}"
            kubectl kustomize --enable-helm "${item}" | \
              kubeconform -skip=Secret -strict -ignore-missing-schemas
          done

  workflows-description:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@692973e3d937129bcbf40652eb9f2f61becf3332 # v4
      - uses: thiagodnf/yaml-schema-checker@3c4a632d4124b6c00e38b492b2eb35dea715e1ae # v0.0.12
        with:
          jsonSchemaFile: workflows/.workflow_with_description.schema.json
          yamlFiles: |
            workflows/argo-events/sensors/*.y*ml
            workflows/argo-events/workflowtemplates/*.y*ml

  shellcheck:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@692973e3d937129bcbf40652eb9f2f61becf3332 # v4
      - uses: reviewdog/action-shellcheck@d99499e855260c9c56f7a1d066933b57326e9e7c # v1
