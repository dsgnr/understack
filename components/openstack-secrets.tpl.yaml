# The purpose of this file is to serve as a template for OpenStack Helm
# based endpoints configuration so that OpenStack Helm populates the
# correct URLs in the configs that it generates for the various services
---

endpoints:

  # 'identity' endpoints are for keystone access
  identity:
    auth:
      # this is the 'admin' user created in keystone by the initial start
      # and used by the other services to create their service accounts
      # and endpoint in the service catalog.
      admin:
        password: "${KEYSTONE_ADMIN_PASSWORD}"
      # this user is the service account that ironic uses
      ironic:
        password: "${IRONIC_KEYSTONE_PASSWORD}"

    # set our public facing URL
    host_fqdn_override:
      public:
        host: keystone.${DNS_ZONE}
        tls:
          # must match the value in the top level 'secrets' key for the public endpoint
          secretName: keystone-tls-api
          issuerRef:
            name: ${DEPLOY_NAME}-cluster-issuer
            kind: ClusterIssuer

  # 'oslo_cache' is the memcache layer
  oslo_cache:
    auth:
      # this is used for encrypting / protecting the memcache tokens
      memcache_secret_key: "${MEMCACHE_SECRET_KEY}"

  # 'oslo_db' is for MariaDB
  oslo_db:
    auth:
      # this is what the keystone service uses to connect to MariaDB
      keystone:
        password: "${KEYSTONE_DB_PASSWORD}"
      # this is what the ironic service uses to connect to MariaDB
      ironic:
        password: "${IRONIC_DB_PASSWORD}"

  # 'oslo_messaging' is for RabbitMQ
  oslo_messaging:
    auth:
      # this is what the keystone service uses to connect to RabbitMQ
      keystone:
        password: "${KEYSTONE_RABBITMQ_PASSWORD}"
      # this is what the ironic service uses to connect to RabbitMQ
      ironic:
        password: "${IRONIC_RABBITMQ_PASSWORD}"

  # 'baremetal' is the ironic service
  baremetal:
    # set our public facing URL
    host_fqdn_override:
      public:
        host: ironic.${DNS_ZONE}
        tls:
          # must match the value in the top level 'secrets' key for the public endpoint
          secretName: ironic-tls-api
          issuerRef:
            name: ${DEPLOY_NAME}-cluster-issuer
            kind: ClusterIssuer

# necessary cause the ingress definition in openstack-helm-infra helm-toolkit hardcodes this
secrets:
  tls:
    baremetal:
      api:
        public: ironic-tls-api
    identity:
      api:
        public: keystone-tls-api
...
