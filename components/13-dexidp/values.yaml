# Full documentation available at
# https://github.com/dexidp/helm-charts/tree/master/charts/dex#values
#

replicaCount: 1
config:
  # Set it to a valid URL
  issuer: https://dexidp.local

  # See https://dexidp.io/docs/storage/ for more options
  # We probably want 'postgres' or 'crd' in production
  storage:
    type: kubernetes
    config:
      inCluster: true

  # Enable at least one connector
  # See https://dexidp.io/docs/connectors/ for more options
  enablePasswordDB: false
  connectors:
    - type: keystone
      # Required field for connector id.
      id: keystone_internal
      # Required field for connector name.
      name: Keystone
      config:
        # Required, without v3 suffix.
        keystoneHost: http://keystone-api.openstack.svc.cluster.local:5000
        # Required, admin user credentials to connect to keystone.
        domain: default
        keystoneUsername: demo
        keystonePassword: DEMO_PASS
    - type: oidc
      name: azure
      id: azure
      config:
        issuer: $AZURE_ISSUER
        clientId: $AZURE_SSO_CLIENT_ID
        clientSecret: $AZURE_SSO_CLIENT_SECRET
        redirectURI: https://dexidp.local/callback
        scopes:
          - openid
          - email
        insecureSkipEmailVerified: true
        insecureEnableGroups: true
        getUserInfo: true
        claimMapping:
          groups: "roles"
  logger:
    level: info

  staticClients:
    - id: nautobot
      secretEnv: NAUTOBOT_SSO_CLIENT_SECRET
      name: "Undercloud Nautobot"
      redirectURIs:
        - "http://localhost:8000/complete/oidc/"
        - "https://nautobot.local/complete/oidc/"

envVars:
  - name: NAUTOBOT_SSO_CLIENT_SECRET
    valueFrom:
      secretKeyRef:
        name: nautobot-sso
        key: client-secret
  - name: AZURE_SSO_CLIENT_ID
    valueFrom:
      secretKeyRef:
        name: azure-sso
        key: client-id
  - name: AZURE_SSO_CLIENT_SECRET
    valueFrom:
      secretKeyRef:
        name: azure-sso
        key: client-secret
  - name: AZURE_ISSUER
    valueFrom:
      secretKeyRef:
        name: azure-sso
        key: issuer
ingress:
  enabled: true
  annotations:
    cert-manager.io/cluster-issuer: selfsigned-cluster-issuer
    nginx.ingress.kubernetes.io/backend-protocol: HTTP
  className: "nginx"
  hosts:
    - host: dexidp.local
      paths:
        - path: /
          pathType: Prefix
  tls:
    - hosts:
      - dexidp.local
      secretName: dex-ingress-tls
